---
export interface Props {
  class?: string;
  delay?: string;
}

const { class: className = "", delay = "0ms" } = Astro.props;
---

<div class={`opacity-0 translate-y-8 transition-all duration-700 ease-out ${className}`} data-animate>
  <slot />
</div>

<script>
  // Intersection Observer para animar elementos cuando aparecen
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        const element = entry.target as HTMLElement;
        element.style.opacity = '1';
        element.style.transform = 'translateY(0)';
        observer.unobserve(element);
      }
    });
  }, observerOptions);

  // Observar todos los elementos con data-animate
  document.addEventListener('DOMContentLoaded', () => {
    const animatedElements = document.querySelectorAll('[data-animate]');
    animatedElements.forEach((el, index) => {
      const element = el as HTMLElement;
      element.style.transitionDelay = `${index * 100}ms`;
      observer.observe(element);
    });
  });
</script>
